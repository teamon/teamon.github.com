<!DOCTYPE html><html><head><meta charset="utf-8" /><meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible" /><title>Scala remote actors</title><link href="http://fonts.googleapis.com/css?family=Droid+Sans:400,700|Bitter:400,700,400italic|Open+Sans:300italic,400italic,700italic,400,300,700" media="screen" rel="stylesheet" type="text/css" /><link href="../assets/stylesheets/all-f5ec2720.css" media="screen" rel="stylesheet" type="text/css" /><script src="../assets/javascripts/all-eca7008a.js" type="text/javascript"></script></head><body class="x2010 x2010_scala-remote-actors"><div class="navbar navbar-default"><div class="navbar-collapse collapse navbar-responsive-collapse"><div class="container"><ul class="nav navbar-nav"><li><a class="navbar-brand" href="/">Blog</a></li><li><a class="navbar-brand" href="/about.html">About</a></li><li><a class="navbar-brand" href="/projects.html">Projects</a></li><li><a class="navbar-brand" href="/talks.html">Talks</a></li></ul></div></div></div><div class="container"><article class="post"><div class="page-header"><div class="row"><div class="col-md-10"><h1>Scala remote actors</h1></div><div class="col-md-2 post-date"><time datetime="2010-10-07">Oct  7, 2010</time></div></div></div><div class="alert alert-info">This article was originally
<a href="http://tumblr.teamon.eu/post/1262975706/scala-remote-actors">published at Tumblr</a>.</div><div class="lead"><h3>Server</h3>
<pre class="highlight scala"><span class="k">import</span> <span class="nn">scala.actors.Actor</span>
<span class="k">import</span> <span class="nn">scala.actors.Actor._</span>
<span class="k">import</span> <span class="nn">scala.actors.remote.RemoteActor</span>
<span class="k">import</span> <span class="nn">scala.actors.remote.RemoteActor._</span>

<span class="k">object</span> <span class="nc">Server</span> <span class="o">{</span>
  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="n">length</span> <span class="o">==</span> <span class="mi">1</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">val</span> <span class="n">port</span> <span class="k">=</span> <span class="n">args</span><span class="o">(</span><span class="mi">0</span><span class="o">).</span><span class="n">toInt</span>
      <span class="k">val</span> <span class="n">server</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Server</span><span class="o">(</span><span class="n">port</span><span class="o">)</span>
      <span class="n">server</span><span class="o">.</span><span class="n">start</span><span class="o">()</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
      <span class="n">println</span><span class="o">(</span><span class="s">"usage: scala Server [LocalPort]"</span><span class="o">)</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">Server</span><span class="o">(</span><span class="n">port</span><span class="k">:</span> <span class="kt">Int</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Actor</span> <span class="o">{</span>
  <span class="nc">RemoteActor</span><span class="o">.</span><span class="n">classLoader</span> <span class="k">=</span> <span class="n">getClass</span><span class="o">().</span><span class="n">getClassLoader</span><span class="o">()</span>
  <span class="k">def</span> <span class="n">act</span><span class="o">()</span> <span class="o">{</span>
    <span class="n">alive</span><span class="o">(</span><span class="n">port</span><span class="o">)</span>
    <span class="n">register</span><span class="o">(</span><span class="ss">'RemoteActor,</span> <span class="n">self</span><span class="o">)</span>

    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">receive</span> <span class="o">{</span>
        <span class="k">case</span> <span class="n">msg</span> <span class="k">=&gt;</span>
          <span class="n">println</span><span class="o">(</span><span class="n">msg</span><span class="o">)</span>
      <span class="o">}</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre>
<h3>Client</h3>
<pre class="highlight scala"><span class="k">import</span> <span class="nn">scala.actors.Actor</span>
<span class="k">import</span> <span class="nn">scala.actors.remote.RemoteActor</span>
<span class="k">import</span> <span class="nn">scala.actors.remote.RemoteActor._</span>
<span class="k">import</span> <span class="nn">scala.actors.remote.Node</span>

<span class="k">object</span> <span class="nc">Client</span> <span class="o">{</span>
  <span class="k">def</span> <span class="n">main</span><span class="o">(</span><span class="n">args</span><span class="k">:</span> <span class="kt">Array</span><span class="o">[</span><span class="kt">String</span><span class="o">])</span> <span class="k">:</span> <span class="kt">Unit</span> <span class="o">=</span> <span class="o">{</span>
    <span class="k">if</span> <span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;=</span> <span class="mi">2</span><span class="o">)</span> <span class="o">{</span>
      <span class="k">val</span> <span class="n">remoteport</span> <span class="k">=</span> <span class="n">args</span><span class="o">(</span><span class="mi">1</span><span class="o">).</span><span class="n">toInt</span>
      <span class="k">val</span> <span class="n">peer</span> <span class="k">=</span> <span class="nc">Node</span><span class="o">(</span><span class="n">args</span><span class="o">(</span><span class="mi">0</span><span class="o">),</span> <span class="n">remoteport</span><span class="o">)</span>
      <span class="k">val</span> <span class="n">msg</span> <span class="k">=</span> <span class="k">if</span><span class="o">(</span><span class="n">args</span><span class="o">.</span><span class="n">length</span> <span class="o">&gt;=</span> <span class="mi">3</span><span class="o">)</span> <span class="n">args</span><span class="o">(</span><span class="mi">2</span><span class="o">)</span> <span class="k">else</span> <span class="s">"Hello"</span>
      <span class="k">val</span> <span class="n">client</span> <span class="k">=</span> <span class="k">new</span> <span class="nc">Client</span><span class="o">(</span><span class="n">peer</span><span class="o">,</span> <span class="n">msg</span><span class="o">)</span>
      <span class="n">client</span><span class="o">.</span><span class="n">start</span>
    <span class="o">}</span>
    <span class="k">else</span> <span class="o">{</span>
      <span class="n">println</span><span class="o">(</span><span class="s">"usage: scala Client [RemoteHostName] [RemotePort] [Message = Hello]"</span><span class="o">)</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>

<span class="k">class</span> <span class="nc">Client</span><span class="o">(</span><span class="n">peer</span><span class="k">:</span> <span class="kt">Node</span><span class="o">,</span> <span class="n">message</span><span class="k">:</span> <span class="kt">String</span><span class="o">)</span> <span class="k">extends</span> <span class="nc">Actor</span> <span class="o">{</span>
  <span class="k">def</span> <span class="n">act</span><span class="o">()</span> <span class="o">{</span>
    <span class="nc">RemoteActor</span><span class="o">.</span><span class="n">classLoader</span> <span class="k">=</span> <span class="n">getClass</span><span class="o">().</span><span class="n">getClassLoader</span><span class="o">()</span>
    <span class="k">val</span> <span class="n">server</span> <span class="k">=</span> <span class="n">select</span><span class="o">(</span><span class="n">peer</span><span class="o">,</span> <span class="ss">'RemoteActor)</span>
    <span class="n">link</span><span class="o">(</span><span class="n">server</span><span class="o">)</span>

    <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">)</span> <span class="o">{</span>
      <span class="n">server</span> <span class="o">!</span> <span class="n">message</span>
      <span class="nc">Thread</span> <span class="n">sleep</span> <span class="mi">1000</span>
    <span class="o">}</span>
  <span class="o">}</span>
<span class="o">}</span>
</pre></div></article><div class="page-header"><h2>Comments</h2></div><div class="alert alert-info">Please comment at the <a href="http://tumblr.teamon.eu/post/1262975706/scala-remote-actors">original post</a>.</div><ul class="pager"><li class="next"><a href="/2010/scala-string-replace">Older post →</a></li><li class="previous"><a href="/2011/scala-collections-collect">← Newer post</a></li></ul></div><footer><div class="container"><div class="page-header"></div><div class="row"><div class="col-md-12"><ul class="list-unstyled"><li class="pull-right"><a href="#top">Back to top ↑</a></li><li><a href="/">Blog</a></li><li><a href="/about.html">About</a></li><li><a href="/projects.html">Projects</a></li><li><a href="/talks.html">Talks</a></li><li>|</li><li><a href="http://github.com/teamon">GitHub</a></li><li><a href="http://twitter.com/iteamon">Twitter</a></li><li><a href="http://monterail.com">Monterail</a></li><li><a href="http://codetunes.com">Codetunes</a></li></ul></div></div><div class="row"><div class="col-md-12"><p>Copyright 2007-2014 &mdash; Tymon Tobolski <br />Based on <a href="http://bootswatch.com/lumen/">Lumen Bootswatch</a>. Web fonts from <a href="http://www.google.com/webfonts">Google</a>. </p></div></div></div></footer></body></html>